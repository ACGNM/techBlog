<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Day Day Up</title><link>https://acgnm.github.io/techBlog/</link><description>Recent content on Day Day Up</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 07 Mar 2021 18:35:48 +0900</lastBuildDate><atom:link href="https://acgnm.github.io/techBlog/index.xml" rel="self" type="application/rss+xml"/><item><title>My Second Post</title><link>https://acgnm.github.io/techBlog/posts/my-second-post/</link><pubDate>Sun, 07 Mar 2021 18:35:48 +0900</pubDate><guid>https://acgnm.github.io/techBlog/posts/my-second-post/</guid><description/></item><item><title>Docker Learning</title><link>https://acgnm.github.io/techBlog/posts/docker/</link><pubDate>Sun, 07 Mar 2021 17:45:27 +0900</pubDate><guid>https://acgnm.github.io/techBlog/posts/docker/</guid><description>Section3 执行启动容器命令之后会发生什么 执行docker container run --publish 80:80 --name webhost --detach nginx之后发生的：
在本地的image cache中寻找 如果本地找不到匹配的image，则在远程的image repo中寻找（默认为Docker Hub） 下载寻找到的image最新版本 以下载好的image为基础创建一个容器container 在docker engine的private network中创建一个虚拟IP 打开主机（host）的80端口连接转发至容器的80端口 如果不用--publish选项则不会打开任何端口 使用image Dockerfile中的CMD启动容器 --detach使得container在后台运行，不接收输入与输出。 重新进入交互模式使用docker attach(需要有正在运行的bash，退出container也停止)，或者docker exec -it(退出container不停止) 参考1 参考2 Container VS. VM container不是mini VM（与VM基本没有相似之处） 只是进程（process） 被限制在其能访问的资源中 进程停止则退出 相关命令解说 docker top列出在特定的容器中执行的进程 ps aux可以发现同样的进程可以在主机系统中查询到 所以容器是一个进程
监视 docker container top 同上 docker container inspect列出启动容器时所用的设置（JSON格式）等元数据 docker container stats监视容器运行状态（CPU使用和内存等） 进入容器内部 docker container run -it以交互的方式启动容器 -t创建一个虚拟的tty -i使得会话开放来接收终端输入（keep session open to receive terminal input） 末尾可以加入想运行的命令，比如bash e.</description></item><item><title>My First Post</title><link>https://acgnm.github.io/techBlog/posts/my-first-post/</link><pubDate>Sun, 07 Mar 2021 17:45:27 +0900</pubDate><guid>https://acgnm.github.io/techBlog/posts/my-first-post/</guid><description/></item></channel></rss>